{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["App","App1","property","state","bcount","scount","currentState","currentTime","isPlaying","loop","undefined","decreaseBreak","setState","increaseBreak","decreaseSession","increasSession","start","document","body","style","backgroundColor","clearInterval","setInterval","changeSession","reset","convertToTime","count","minutes","Math","floor","seconds","startORstop","changeSessionName","changeColor","this","propertyBreak","title","decrease","increase","propertySession","className","onClick","id","React","Component","SetTimer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d3c587e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n        </div>\n    );\n}\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nclass App1 extends React.Component {\n\n  constructor(property) {\n    super(property);\n    this.loop = undefined;\n  }\n\n  state = {\n    bcount: 10,\n    scount: 45,\n    currentState: 'Session',\n    currentTime: 45 * 60,\n    isPlaying: false,\n    loop: undefined\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.loop);\n  }\n\n  decreaseBreak = () => {\n    const { bcount, currentState, currentTime, isPlaying } = this.state;\n\n    if (bcount > 0) {\n      if (isPlaying == false && currentState == 'Break') {\n        this.setState({\n          bcount: bcount - 1,\n          currentTime: (bcount - 1) * 60\n        })\n      }\n      else {\n        this.setState({\n          bcount: bcount - 1\n        })\n      }\n    }\n\n  }\n\n  increaseBreak = () => {\n    const { bcount, currentState, currentTime, isPlaying } = this.state;\n    if (bcount <= 59) {\n      if (isPlaying == false && currentState == 'Break') {\n        this.setState({\n          bcount: bcount + 1,\n          currentTime: (bcount + 1) * 60\n        })\n      }\n      else {\n        this.setState({\n          bcount: bcount + 1,\n        })\n      }\n\n    }\n  }\n\n  decreaseSession = () => {\n    const { scount, currentState, currentTime, isPlaying } = this.state;\n    if (scount > 0) {\n      if (isPlaying == false && currentState == 'Session') {\n        this.setState({\n          scount: scount - 1,\n          currentTime: (scount - 1) * 60\n        })\n      }\n      else {\n        this.setState({\n          scount: scount - 1\n        })\n      }\n    }\n  }\n\n  increasSession = () => {\n    const { scount, currentState, currentTime, isPlaying } = this.state;\n    if (scount <= 59) {\n      if (isPlaying == false && currentState == 'Session') {\n        this.setState({\n          scount: scount + 1,\n          currentTime: (scount + 1) * 60\n        })\n      }\n      else {\n        this.setState({\n          scount: scount + 1\n        })\n      }\n\n    }\n  }\n\n  start = () => {\n    const { isPlaying } = this.state;\n\n    if (isPlaying) {\n      document.body.style.backgroundColor = 'red'\n      clearInterval(this.loop);\n      this.setState({\n        isPlaying: false\n      })\n    }\n    else {\n      this.setState({\n        isPlaying: true\n      })\n      document.body.style.backgroundColor = 'green'\n      this.loop = setInterval(() => {\n        const { currentTime, currentState, bcount, scount } = this.state;\n        if (currentTime <= 0) {\n          this.setState({\n            currentState: (currentState == 'Session') ? 'Break' : 'Session',\n            currentTime: (currentState == 'Session') ? bcount * 60 : scount * 60\n          })\n        }\n        else {\n          this.setState(\n            {\n              currentTime: currentTime - 1\n            }\n          )\n        }\n      }, 1000);\n    }\n\n  }\n\n  changeSession = () => {\n    const { currentState, currentTime, scount, bcount, isPlaying, loop } = this.state;\n\n    clearInterval(this.loop);\n    this.setState({\n      currentState: (currentState == 'Session') ? 'Break' : 'Session',\n      currentTime: (currentState == 'Session') ? bcount * 60 : scount * 60,\n      isPlaying: false\n    })\n  }\n\n  reset = () => {\n    const { currentState, currentTime, scount, bcount, isPlaying, loop } = this.state;\n    document.body.style.backgroundColor = '#ff4757'\n    clearInterval(this.loop);\n    this.setState({\n      currentState: 'Session',\n      currentTime: scount * 60,\n      // currentState: (currentState === 'Session') ? 'Session' : 'Break',\n      // currentTime: (currentState === 'Session') ? scount * 60 : bcount * 60,\n      isPlaying: false\n    })\n  }\n\n  convertToTime = (count) => {\n    let minutes = Math.floor(count / 60);\n    let seconds = count % 60;\n\n    if (seconds < 10) {\n      seconds = '0' + seconds;\n    }\n\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n\n    return `${minutes}:${seconds}`;\n  }\n\n  startORstop = () => {\n    const { isPlaying } = this.state;\n    if (isPlaying) {\n      return 'Stop'\n    }\n    else {\n      return 'Start'\n    }\n  }\n\n  changeSessionName = () => {\n    const { currentState } = this.state;\n    return (currentState == 'Session') ? 'Take Break' : 'Take Session'\n  }\n\n  changeColor = () => {\n    const { isPlaying } = this.state;\n    return (isPlaying) ? '{backgound-color : green}' : '{backgound-color : red}'\n  }\n\n\n\n  render() {\n    const { bcount,\n      scount,\n      currentState,\n      currentTime\n    } = this.state;\n    const propertyBreak = {\n      title: 'Break Time',\n      count: bcount,\n      decrease: this.decreaseBreak,\n      increase: this.increaseBreak\n    }\n    const propertySession = {\n      title: 'Pomodoro Time',\n      count: scount,\n      decrease: this.decreaseSession,\n      increase: this.increasSession\n    }\n\n    return (\n      <div className=\"pomodoro-container\">\n        {/* <nav id=\"navbar\"><span><img src=\"https://cdn.pixabay.com/photo/2017/11/10/13/32/clock-2936333_1280.png\"></img></span>Focus Clock</nav> */}\n        <div className=\"clock-container\" >\n          <h1>{currentState}</h1>\n          <span>{this.convertToTime(currentTime)}</span>\n        </div>\n        <div className=\"clock-btn \">\n          <button onClick={this.start} >{this.startORstop()}</button>\n          <button onClick={this.reset}>Reset</button>\n        </div>\n        <button id='chg-btn' className=\"flex\" onClick={this.changeSession} >{this.changeSessionName()}</button>\n        <div className=\"action-container \">\n          <SetTimer {...propertyBreak} />\n          <SetTimer {...propertySession} />\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst SetTimer = (property) => (\n  <div className='timer-container'>\n    <h1>{property.title}</h1>\n    <div className=\"action-btn\">\n      <button onClick={property.decrease}>-</button>\n      <span>{property.count}</span>\n      <button onClick={property.increase}>+</button>\n    </div>\n  </div>\n)\nReactDOM.render(\n  <App1 />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}